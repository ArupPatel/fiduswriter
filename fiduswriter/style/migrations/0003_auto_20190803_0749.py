# Generated by Django 2.2.3 on 2019-08-03 05:49
import json
from xml.dom import minidom

from django.db import migrations, models
import style.models

# Based on https://bitbucket.org/fbennett/citeproc-js/src/default/makejson.py by Frank Bennett
# See license info https://bitbucket.org/fbennett/citeproc-js/src/default/LICENSE

class XMLWalker:

    def __init__(self, xmlstring):
        dom = minidom.parseString(xmlstring).documentElement
        self.output = self.walk_xml(dom)

    def walk_xml(self, elem):
        obj = {}
        obj["name"] = elem.nodeName
        obj["attrs"] = {}
        if elem.attributes:
            for key in elem.attributes.keys():
                obj["attrs"][key] = elem.attributes[key].value
        obj["children"] = []
        if len(elem.childNodes) == 0 and elem.nodeName == "term":
            obj["children"] = [""]
        for child in elem.childNodes:
            if child.nodeName == "#comment":
                pass
            elif child.nodeName == "#text":
                if len(elem.childNodes) == 1 and elem.nodeName in ["term","single","multiple"]:
                    obj["children"].append(child.wholeText)
            else:
                obj["children"].append(self.walk_xml(child))
        return obj


def convert_xml_to_json(apps, schema_editor):
    CitationStyle = apps.get_model('style', 'CitationStyle')
    for cs in CitationStyle.objects.all():
        if cs.contents.strip()[0] == '<': #  XML - we convert
            walker = XMLWalker(cs.contents)
            cs.contents = json.dumps(walker.output, indent=4)
        cs.save()
    CitationLocale = apps.get_model('style', 'CitationLocale')
    for cl in CitationLocale.objects.all():
        if cl.contents.strip()[0] == '<': #  XML - we convert
            walker = XMLWalker(cl.contents)
            cl.contents = json.dumps(walker.output, indent=4)
        cl.save()


class Migration(migrations.Migration):

    dependencies = [
        ('style', '0002_auto_20190316_0241'),
    ]

    operations = [
        migrations.AlterField(
            model_name='citationstyle',
            name='contents',
            field=models.TextField(default=style.models.default_citationstyle, help_text='The style definiton (JSON, accepts also XML).'),
        ),
        migrations.AlterField(
            model_name='citationlocale',
            name='contents',
            field=models.TextField(help_text='The locale definiton (JSON, accepts also XML).'),
        ),
        migrations.RunPython(convert_xml_to_json),
    ]
